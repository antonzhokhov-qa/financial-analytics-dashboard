import { useState, useEffect } from 'react'
import { parseCSV } from '../utils/csvParser'
import { calculateMetrics, generateInsights, getAmountRanges, getConversionByAmount, getStatusDistribution, getCompanyDistribution, getPaymentMethodDistribution, getTimeSeriesData, getTopUsers, detectAnomalies } from '../utils/analytics'
import FileUpload from './FileUpload'
import ProviderSelector from './ProviderSelector'
import BigFileProcessor from './BigFileProcessor'
import MetricsGrid from './MetricsGrid'
import ChartsGrid from './ChartsGrid'
import DataTable from './DataTable'
import APIDataTable from './APIDataTable'
import VirtualizedDataTable from './VirtualizedDataTable'
import EnhancedExportData from './EnhancedExportData'
import Filters from './Filters'
import InsightsSection from './InsightsSection'
import AnomalyDetection from './AnomalyDetection'
import TimezoneSelector from './TimezoneSelector'
import TimeBasedChartsGrid from './TimeBasedChartsGrid'
import BeautifulChartsGrid from './BeautifulChartsGrid'
import EnhancedChartsGrid from './EnhancedChartsGrid'
import PredictiveAnalytics from './PredictiveAnalytics'
import { TrendingUp, TrendingDown, DollarSign, Users, Activity, AlertTriangle, Brain, BarChart3 } from 'lucide-react'

const Dashboard = ({ 
  dataSource = 'csv', 
  preloadedData = null, 
  onBackToSelector = null 
}) => {
  const [data, setData] = useState(preloadedData || [])
  const [filteredData, setFilteredData] = useState(preloadedData || [])
  const [metrics, setMetrics] = useState(null)
  const [insights, setInsights] = useState([])
  const [anomalies, setAnomalies] = useState([])
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState(null)
  const [dataType, setDataType] = useState(dataSource === 'api' ? 'platform' : null) // –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–ª–∏ –ø–æ –∏—Å—Ç–æ—á–Ω–∏–∫—É
  const [timezone, setTimezone] = useState('UTC') // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤
  const [selectedProvider, setSelectedProvider] = useState(null) // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  const [showProviderSelector, setShowProviderSelector] = useState(true) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  const [processingMode, setProcessingMode] = useState('auto') // 'auto', 'client' –∏–ª–∏ 'server'
  const [filters, setFilters] = useState({
    status: '',
    company: '',
    paymentMethod: '',
    transactionType: '',
    dateRange: { start: '', end: '' },
    amountRange: { min: '', max: '' }
  })

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
  const convertToTimezone = (dateString, targetTimezone) => {
    const date = new Date(dateString)
    if (targetTimezone === 'UTC') {
      return date
    }
    
    // –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ - –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ –ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Ç–∏–ø–∞ date-fns-tz
    const offsets = {
      'Europe/Moscow': 3,
      'Europe/Istanbul': 3,
      'Europe/London': 0,
      'Europe/Berlin': 1,
      'Asia/Dubai': 4,
      'Asia/Tokyo': 9,
      'America/New_York': -5,
      'America/Los_Angeles': -8
    }
    
    const offset = offsets[targetTimezone] || 0
    const convertedDate = new Date(date.getTime() + offset * 60 * 60 * 1000)
    return convertedDate
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  const handleProviderSelect = (providerId) => {
    setSelectedProvider(providerId)
    setShowProviderSelector(false)
  }

  // –í–æ–∑–≤—Ä–∞—Ç –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
  const handleBackToProviderSelector = () => {
    setShowProviderSelector(true)
    setSelectedProvider(null)
    setData([])
    setFilteredData([])
    setMetrics(null)
    setInsights([])
    setAnomalies([])
  }

  // –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Ñ–∞–π–ª–∞
  const determineProcessingMode = (file) => {
    const fileSizeMB = file.size / (1024 * 1024)
    console.log(`üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${fileSizeMB.toFixed(2)}MB`)
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª –±–æ–ª—å—à–µ 5MB –∏–ª–∏ –±–æ–ª–µ–µ 10,000 —Å—Ç—Ä–æ–∫ (–ø—Ä–∏–º–µ—Ä–Ω–æ) - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–µ—Ä–≤–µ—Ä
    if (fileSizeMB > 5) {
      console.log('üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω —Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º (—Ñ–∞–π–ª > 5MB)')
      return 'server'
    } else {
      console.log('üñ•Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Ä–µ–∂–∏–º (—Ñ–∞–π–ª <= 5MB)')
      return 'client'
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
  const handleServerResults = (serverData) => {
    console.log('üìä –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å —Å–µ—Ä–≤–µ—Ä–∞:', serverData)
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–µ—Ä–≤–µ—Ä–∞
    setData(serverData.data || [])
    setFilteredData(serverData.data || [])
    setMetrics(serverData.metrics)
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É
    const detectedType = serverData.metrics?.provider === 'payshack' ? 'merchant' : 'merchant'
    setDataType(detectedType)
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:', {
      dataLength: serverData.data?.length || 0,
      metrics: serverData.metrics,
      dataType: detectedType
    })
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
  const handleFileUpload = (file) => {
    setLoading(true)
    setError(null)
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏
    let actualMode = processingMode
    if (processingMode === 'auto') {
      actualMode = determineProcessingMode(file)
      console.log(`üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º: ${actualMode}`)
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π API —Å–µ—Ä–≤–∏—Å –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤
    const processWithUniversalAPI = async () => {
      try {
        const UniversalApiService = (await import('../utils/universalApiService.js')).default
        const apiService = new UniversalApiService()
        
        const result = await apiService.processFile(
          file, 
          selectedProvider, 
          actualMode, 
          (progress) => {
            console.log('üìä –ü—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏:', progress)
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
          }
        )
        
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', result)
        
        if (result.data) {
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∫ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–º —Ä–µ–∂–∏–º–µ
          setData(result.data)
          setFilteredData(result.data)
          
          // –í—ã—á–∏—Å–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏
          if (result.metrics) {
            setMetrics(result.metrics)
          } else {
            const { default: calculateMetrics } = await import('../utils/analytics.js')
            const calculatedMetrics = calculateMetrics(result.data, selectedProvider)
            setMetrics(calculatedMetrics)
          }
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö
          const detectedType = selectedProvider === 'payshack' ? 'payshack' : 'merchant'
          setDataType(detectedType)
          
          console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:', {
            dataLength: result.data.length,
            mode: result.mode || actualMode,
            provider: selectedProvider
          })
        }
        
        setLoading(false)
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏:', error)
        setError(`–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${error.message}`)
        setLoading(false)
      }
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
    processWithUniversalAPI()
    return
    
    // –ö–ª–∏–µ–Ω—Ç—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞
    const reader = new FileReader()
    reader.onload = (e) => {
      try {
        const text = e.target.result
        console.log('File content preview:', text.substring(0, 500))
        
        // –ü–∞—Ä—Å–∏–º CSV —Å —É—á–µ—Ç–æ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        const parsedData = parseCSV(text, selectedProvider)
        console.log('Parsed data:', parsedData.length, 'rows')
        
        if (parsedData.length === 0) {
          setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞.')
          setLoading(false)
          return
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        const firstRow = parsedData[0]
        // –ü—Ä–æ–≤–∞–π–¥–µ—Ä (merchant) –∏–º–µ–µ—Ç –ø–æ–ª—è: linkId, hash, paymentMethod
        // –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ (platform) –∏–º–µ–µ—Ç –ø–æ–ª—è: id (Reference ID), –Ω–æ –±–µ–∑ hash –∏ –¥—Ä—É–≥–∏—Ö —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π
        const detectedType = (firstRow.hash || firstRow.linkId || firstRow.paymentMethod) ? 'merchant' : 'platform'
        console.log('Detected data type:', detectedType)
        
        setData(parsedData)
        setFilteredData(parsedData)
        setDataType(detectedType)
        setLoading(false)
      } catch (err) {
        console.error('Error parsing file:', err)
        setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: ' + err.message)
        setLoading(false)
      }
    }
    
    reader.onerror = () => {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞')
      setLoading(false)
    }
    
    reader.readAsText(file)
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (preloadedData && preloadedData.length > 0) {
      console.log('Loading preloaded data:', preloadedData.length, 'items from', dataSource)
      setData(preloadedData)
      setFilteredData(preloadedData)
      setDataType(dataSource === 'api' ? 'platform' : 'merchant')
    }
  }, [preloadedData, dataSource])

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleFiltersChange = (newFilters) => {
    console.log('üîç Applying filters:', newFilters, 'Data source:', dataSource, 'Data type:', dataType)
    console.log('üìã Sample data structure:', data.slice(0, 2).map(item => ({
      status: item.status,
      company: item.company,
      paymentMethod: item.paymentMethod,
      transactionType: item.transactionType,
      type: item.type,
      isDeposit: item.isDeposit,
      isWithdraw: item.isWithdraw,
      createdAt: item.createdAt
    })))
    
    let filtered = [...data]
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É - –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    if (newFilters.status) {
      const beforeStatusFilter = filtered.length
      filtered = filtered.filter(row => {
        // –î–ª—è API –¥–∞–Ω–Ω—ã—Ö - —Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        if (dataSource === 'api' || dataSource === 'enhanced-api') {
          return row.status === newFilters.status
        }
        // –î–ª—è CSV –¥–∞–Ω–Ω—ã—Ö - –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Å—Ç–∞—Ç—É—Å—ã 
        const rowStatus = (row.status || '').toLowerCase()
        const filterStatus = newFilters.status.toLowerCase()
        const matches = rowStatus === filterStatus || rowStatus.includes(filterStatus)
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 3 –∑–∞–ø–∏—Å–µ–π
        if (filtered.indexOf(row) < 3) {
          console.log(`üîç Status filter debug for row ${filtered.indexOf(row)}:`, {
            rowStatus: row.status,
            rowStatusLower: rowStatus,
            filterStatus: newFilters.status,
            filterStatusLower: filterStatus,
            matches: matches
          })
        }
        
        return matches
      })
      console.log(`üìä Status filter: ${beforeStatusFilter} ‚Üí ${filtered.length} (filter: "${newFilters.status}")`)
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –∫–æ–º–ø–∞–Ω–∏–∏ - —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –≥–¥–µ –µ—Å—Ç—å company
    if (newFilters.company) {
      const beforeCompanyFilter = filtered.length
      filtered = filtered.filter(row => {
        const company = row.company || row.project || ''
        const matches = company === newFilters.company
        return matches
      })
      console.log(`üè¢ Company filter: ${beforeCompanyFilter} ‚Üí ${filtered.length} (filter: "${newFilters.company}")`)
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –º–µ—Ç–æ–¥—É –æ–ø–ª–∞—Ç—ã - –∞–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
    if (newFilters.paymentMethod) {
      const beforePaymentFilter = filtered.length
      filtered = filtered.filter(row => {
        const method = row.paymentMethod || row.paymentMethodCode || row.paymentProduct || ''
        const matches = method === newFilters.paymentMethod
        return matches
      })
      console.log(`üí≥ Payment method filter: ${beforePaymentFilter} ‚Üí ${filtered.length} (filter: "${newFilters.paymentMethod}")`)
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Ç–∏–ø—É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ - –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤
    if (newFilters.transactionType) {
      const beforeTypeFilter = filtered.length
      filtered = filtered.filter(row => {
        const transactionType = row.transactionType || row.type || ''
        // –ì–∏–±–∫–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        const filterTypeLower = newFilters.transactionType.toLowerCase()
        const transactionTypeLower = transactionType.toLowerCase()
        
        const matches = transactionType === newFilters.transactionType || 
               transactionTypeLower === filterTypeLower ||
               // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä—É—Å—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
               (filterTypeLower === '–¥–µ–ø–æ–∑–∏—Ç' && (row.isDeposit || transactionTypeLower.includes('deposit') || transactionTypeLower.includes('–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'))) ||
               (filterTypeLower === '–≤—ã–ø–ª–∞—Ç–∞' && (row.isWithdraw || transactionTypeLower.includes('withdraw') || transactionTypeLower.includes('–≤—ã–≤–æ–¥'))) ||
               // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π  
               (filterTypeLower.includes('deposit') && (row.isDeposit || transactionTypeLower.includes('deposit') || transactionTypeLower.includes('–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'))) ||
               (filterTypeLower.includes('withdraw') && (row.isWithdraw || transactionTypeLower.includes('withdraw') || transactionTypeLower.includes('–≤—ã–≤–æ–¥')))
        
        // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 3 –∑–∞–ø–∏—Å–µ–π
        if (filtered.indexOf(row) < 3) {
          console.log(`üîÑ Transaction type filter debug for row ${filtered.indexOf(row)}:`, {
            transactionType: row.transactionType,
            type: row.type,
            filterType: newFilters.transactionType,
            filterTypeLower: filterTypeLower,
            transactionTypeLower: transactionTypeLower,
            isDeposit: row.isDeposit,
            isWithdraw: row.isWithdraw,
            matches: matches
          })
        }
        
        return matches
      })
      console.log(`üîÑ Transaction type filter: ${beforeTypeFilter} ‚Üí ${filtered.length} (filter: "${newFilters.transactionType}")`)
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–µ —Å —É—á–µ—Ç–æ–º —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    if (newFilters.dateRange.start || newFilters.dateRange.end) {
      const beforeDateFilter = filtered.length
      console.log('üìÖ Date filter applied. Before:', beforeDateFilter, 'Range:', newFilters.dateRange, 'Timezone:', timezone)
      
      filtered = filtered.filter(row => {
        if (!row.createdAt) {
          console.log('‚ö†Ô∏è Row without createdAt:', row.id || 'unknown')
          return true // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞—Ç—ã, –Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º
        }
        
        const rowDate = new Date(row.createdAt)
        if (isNaN(rowDate.getTime())) {
          console.log('‚ö†Ô∏è Invalid date format:', row.createdAt)
          return true // –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞—è, –Ω–µ —Ñ–∏–ª—å—Ç—Ä—É–µ–º
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        let rowDateStr
        try {
          if (row.createdAt.includes(' ')) {
            // –§–æ—Ä–º–∞—Ç "2025-07-01 12:00:12"
            rowDateStr = row.createdAt.split(' ')[0]
          } else if (row.createdAt.includes('T')) {
            // ISO —Ñ–æ—Ä–º–∞—Ç "2025-07-01T12:00:12.000Z"
            rowDateStr = row.createdAt.split('T')[0]
          } else {
            // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º —á—Ç–æ —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
            rowDateStr = row.createdAt
          }
        } catch (e) {
          console.log('‚ö†Ô∏è Error parsing date:', row.createdAt, e)
          return true
        }
        
        if (newFilters.dateRange.start) {
          if (rowDateStr < newFilters.dateRange.start) return false
        }
        
        if (newFilters.dateRange.end) {
          if (rowDateStr > newFilters.dateRange.end) return false
        }
        
        return true
      })
      
      console.log(`üìÖ Date filter: ${beforeDateFilter} ‚Üí ${filtered.length} (range: ${newFilters.dateRange.start} - ${newFilters.dateRange.end})`)
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Å—É–º–º–µ
    if (newFilters.amountRange.min || newFilters.amountRange.max) {
      filtered = filtered.filter(row => {
        const amount = parseFloat(row.amount) || 0
        const min = parseFloat(newFilters.amountRange.min) || 0
        const max = parseFloat(newFilters.amountRange.max) || Infinity
        
        return amount >= min && amount <= max
      })
    }
    
    console.log(`üéØ Final result: ${data.length} ‚Üí ${filtered.length} rows (${((filtered.length / data.length) * 100).toFixed(1)}% remaining)`)
    console.log('üìã Applied filters summary:', {
      status: newFilters.status || 'none',
      company: newFilters.company || 'none', 
      paymentMethod: newFilters.paymentMethod || 'none',
      transactionType: newFilters.transactionType || 'none',
      dateRange: (newFilters.dateRange.start || newFilters.dateRange.end) ? `${newFilters.dateRange.start} - ${newFilters.dateRange.end}` : 'none',
      amountRange: (newFilters.amountRange.min || newFilters.amountRange.max) ? `${newFilters.amountRange.min} - ${newFilters.amountRange.max}` : 'none'
    })
    
    setFilters(newFilters)
    setFilteredData(filtered)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–µ–Ω—ã —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
  const handleTimezoneChange = (newTimezone) => {
    setTimezone(newTimezone)
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–∏ —Å–º–µ–Ω–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
    handleFiltersChange(filters)
  }

  // –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (filteredData.length > 0 && dataType) {
      const calculatedMetrics = calculateMetrics(filteredData, dataType)
      setMetrics(calculatedMetrics)
      
      const generatedInsights = generateInsights(filteredData, calculatedMetrics)
      setInsights(generatedInsights)
      
      const detectedAnomalies = detectAnomalies(filteredData)
      setAnomalies(detectedAnomalies)
    }
  }, [filteredData, dataType])

  // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏ —ç—Ç–æ CSV —Ä–µ–∂–∏–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏–ª–∏ —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
  if (data.length === 0 && dataSource === 'csv') {
    if (showProviderSelector) {
      return (
        <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center p-4">
          <ProviderSelector 
            onProviderSelect={handleProviderSelect}
            selectedProvider={selectedProvider}
            onBack={onBackToSelector}
          />
        </div>
      )
    }

    return (
      <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 flex items-center justify-center p-4">
        <div className="w-full max-w-4xl space-y-8">
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <div className="text-center space-y-4">
            <div className="w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center mx-auto">
              <TrendingUp className="w-10 h-10 text-white" />
            </div>
            <h1 className="text-4xl font-bold text-white">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π</h1>
            <p className="text-xl text-gray-300 max-w-2xl mx-auto">
              {selectedProvider === 'optipay' ? 'üáπüá∑ Optipay (–¢—É—Ä—Ü–∏—è)' : 
               selectedProvider === 'payshack' ? 'üáÆüá≥ Payshack (–ò–Ω–¥–∏—è)' : 
               '–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV —Ñ–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π'}
            </p>
          </div>

          {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–æ–≤ */}
          <div className="bg-white/10 backdrop-blur-xl rounded-xl p-4 border border-white/20 mb-6">
            <div className="flex items-center justify-center space-x-4">
              <span className="text-white font-medium">–†–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏:</span>
              <div className="flex bg-white/10 rounded-lg p-1">
                <button
                  onClick={() => setProcessingMode('auto')}
                  className={`px-4 py-2 rounded-md transition-all ${
                    processingMode === 'auto'
                      ? 'bg-green-500 text-white shadow-lg'
                      : 'text-white/70 hover:text-white'
                  }`}
                >
                  üéØ –ê–≤—Ç–æ
                </button>
                <button
                  onClick={() => setProcessingMode('client')}
                  className={`px-4 py-2 rounded-md transition-all ${
                    processingMode === 'client'
                      ? 'bg-blue-500 text-white shadow-lg'
                      : 'text-white/70 hover:text-white'
                  }`}
                >
                  üñ•Ô∏è –ë—Ä–∞—É–∑–µ—Ä
                </button>
                <button
                  onClick={() => setProcessingMode('server')}
                  className={`px-4 py-2 rounded-md transition-all ${
                    processingMode === 'server'
                      ? 'bg-purple-500 text-white shadow-lg'
                      : 'text-white/70 hover:text-white'
                  }`}
                >
                  üöÄ –°–µ—Ä–≤–µ—Ä
                </button>
              </div>
            </div>
            <div className="text-center mt-2">
              <p className="text-white/60 text-sm">
                {processingMode === 'auto' 
                  ? '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä (—Ñ–∞–π–ª—ã >5MB ‚Üí —Å–µ—Ä–≤–µ—Ä, ‚â§5MB ‚Üí –±—Ä–∞—É–∑–µ—Ä)'
                  : processingMode === 'client' 
                    ? '–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–¥–æ 10,000 –∑–∞–ø–∏—Å–µ–π)'
                    : '–°–µ—Ä–≤–µ—Ä–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π, WebSocket –ø—Ä–æ–≥—Ä–µ—Å—Å)'
                }
              </p>
            </div>
          </div>

                    {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ */}
          {processingMode === 'server' ? (
            <BigFileProcessor
              selectedProvider={{ id: selectedProvider, name: selectedProvider === 'optipay' ? 'Optipay' : 'Payshack' }}
              onResults={handleServerResults}
            />
          ) : (
            <FileUpload onFileUpload={handleFileUpload} loading={loading} />
          )}
          
          {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ */}
          <div className="text-center">
            <button
              onClick={handleBackToProviderSelector}
              className="inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
            >
              ‚Üê –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            </button>
          </div>
          
          {error && (
            <div className="bg-red-500/20 border border-red-500/30 rounded-xl p-4 text-red-300">
              {error}
            </div>
          )}
        </div>
      </div>
    )
  }

  // –û—Å–Ω–æ–≤–Ω–æ–π –¥–∞—à–±–æ—Ä–¥ —Å –¥–∞–Ω–Ω—ã–º–∏
  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white/5 backdrop-blur-xl border-b border-white/10">
        <div className="max-w-7xl mx-auto px-4 py-6">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-4">
              <div className="w-12 h-12 bg-gradient-to-br from-blue-500 to-purple-600 rounded-xl flex items-center justify-center">
                <TrendingUp className="w-6 h-6 text-white" />
              </div>
              <div>
                <h1 className="text-2xl font-bold text-white">–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π</h1>
                <div className="flex items-center space-x-4">
                  <p className="text-gray-300">
                    {filteredData.length} –∑–∞–ø–∏—Å–µ–π –∏–∑ {data.length} ‚Ä¢ 
                    {dataSource === 'api' ? (
                      <span className="text-green-400 ml-1">üåê API –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã</span>
                    ) : (
                      <span className="text-blue-400 ml-1">
                        üìÇ {selectedProvider === 'optipay' ? 'üáπüá∑ Optipay' : 
                            selectedProvider === 'payshack' ? 'üáÆüá≥ Payshack' : 
                            dataType === 'platform' ? '–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞' : '–ü—Ä–æ–≤–∞–π–¥–µ—Ä'}
                      </span>
                    )}
                  </p>
                  {dataSource === 'api' && (
                    <span className="px-2 py-1 bg-green-500/20 text-green-300 rounded-full text-xs border border-green-500/30">
                      –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è
                    </span>
                  )}
                </div>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è CSV) */}
              {dataSource === 'csv' && selectedProvider && (
                <button
                  onClick={handleBackToProviderSelector}
                  className="px-4 py-2 bg-orange-500/20 text-orange-300 rounded-lg hover:bg-orange-500/30 transition-colors duration-200"
                >
                  ‚Üê –í—ã–±—Ä–∞—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
                </button>
              )}
              
              {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –∏—Å—Ç–æ—á–Ω–∏–∫–∞ */}
              {onBackToSelector && (
                <button
                  onClick={onBackToSelector}
                  className="px-4 py-2 bg-purple-500/20 text-purple-300 rounded-lg hover:bg-purple-500/30 transition-colors duration-200"
                >
                  ‚Üê –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
                </button>
              )}
              
              {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è CSV) */}
              {dataSource === 'csv' && (
                <button
                  onClick={() => {
                    setData([])
                    setFilteredData([])
                    setMetrics(null)
                    setDataType(null)
                    setError(null)
                    setFilters({
                      status: '',
                      company: '',
                      paymentMethod: '',
                      transactionType: '',
                      dateRange: { start: '', end: '' },
                      amountRange: { min: '', max: '' }
                    })
                  }}
                  className="px-4 py-2 bg-blue-500/20 text-blue-300 rounded-lg hover:bg-blue-500/30 transition-colors duration-200"
                >
                  –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª
                </button>
              )}
              
              {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ –¥–ª—è API) */}
              {dataSource === 'api' && onBackToSelector && (
                <button
                  onClick={onBackToSelector}
                  className="px-4 py-2 bg-green-500/20 text-green-300 rounded-lg hover:bg-green-500/30 transition-colors duration-200"
                >
                  üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                </button>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-7xl mx-auto px-4 py-8 space-y-8">
        {/* –ú–µ—Ç—Ä–∏–∫–∏ */}
        {metrics && (
          <MetricsGrid metrics={metrics} dataType={dataType} />
        )}

        {/* –§–∏–ª—å—Ç—Ä—ã –∏ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞ */}
        <div className="bg-white/5 backdrop-blur-xl rounded-2xl p-6 border border-white/10">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <div className="lg:col-span-2">
              <Filters 
                data={data} 
                filters={filters} 
                onFiltersChange={handleFiltersChange} 
                dataType={dataType}
              />
            </div>
            <div className="space-y-4">
              <div className="flex items-center space-x-3">
                <div className="w-8 h-8 bg-gradient-to-br from-green-500 to-blue-600 rounded-lg flex items-center justify-center">
                  <TrendingUp className="w-4 h-4 text-white" />
                </div>
                <div>
                  <h3 className="text-lg font-semibold text-white">–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</h3>
                  <p className="text-sm text-gray-400">–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</p>
                </div>
              </div>
              <TimezoneSelector 
                selectedTimezone={timezone}
                onTimezoneSelect={handleTimezoneChange}
              />
            </div>
          </div>
        </div>

        {/* –ì—Ä–∞—Ñ–∏–∫–∏ */}
        <ChartsGrid data={filteredData} metrics={metrics} dataType={dataType} />

        {/* –í—Ä–µ–º–µ–Ω–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ */}
        <div className="bg-white/5 backdrop-blur-xl rounded-2xl p-6 border border-white/10">
          <div className="flex items-center space-x-3 mb-6">
            <div className="w-8 h-8 bg-gradient-to-br from-purple-500 to-pink-600 rounded-lg flex items-center justify-center">
              <Activity className="w-4 h-4 text-white" />
            </div>
            <div>
              <h3 className="text-lg font-semibold text-white">–í—Ä–µ–º–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏–∑</h3>
              <p className="text-sm text-gray-400">
                –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ —á–∞—Å–∞–º, –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏ –∏ –¥–∏–Ω–∞–º–∏–∫–∞ ‚Ä¢ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {timezone}
              </p>
            </div>
          </div>
                      <BeautifulChartsGrid data={filteredData} timezone={timezone} dataType={dataType} />
        </div>

        {/* –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Å Chart.js */}
        <div className="bg-white/5 backdrop-blur-xl rounded-2xl p-6 border border-white/10">
          <div className="flex items-center space-x-3 mb-6">
            <div className="w-8 h-8 bg-gradient-to-br from-blue-500 to-cyan-600 rounded-lg flex items-center justify-center">
              <BarChart3 className="w-4 h-4 text-white" />
            </div>
            <div>
              <h3 className="text-lg font-semibold text-white">–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è</h3>
              <p className="text-sm text-gray-400">
                –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –≥—Ä–∞—Ñ–∏–∫–∏ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
              </p>
            </div>
          </div>
          <EnhancedChartsGrid data={filteredData} />
        </div>

        {/* –ü—Ä–æ–≥–Ω–æ–∑–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ */}
        {metrics && (
          <div className="bg-white/5 backdrop-blur-xl rounded-2xl p-6 border border-white/10">
            <div className="flex items-center space-x-3 mb-6">
              <div className="w-8 h-8 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-lg flex items-center justify-center">
                <Brain className="w-4 h-4 text-white" />
              </div>
              <div>
                <h3 className="text-lg font-semibold text-white">–ü—Ä–æ–≥–Ω–æ–∑–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞</h3>
                <p className="text-sm text-gray-400">
                  –ü—Ä–æ–≥–Ω–æ–∑—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
                </p>
              </div>
            </div>
            <PredictiveAnalytics data={filteredData} metrics={metrics} />
          </div>
        )}

        {/* –¢–∞–±–ª–∏—Ü–∞ –¥–∞–Ω–Ω—ã—Ö */}
        {dataSource === 'api' ? (
          <APIDataTable data={filteredData} />
        ) : (
          <VirtualizedDataTable 
            data={filteredData} 
            dataType={dataType}
            isServerData={processingMode === 'server'}
            jobId={metrics?.jobId}
          />
        )}

        {/* –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö */}
        <EnhancedExportData 
          data={filteredData}
          metrics={metrics}
          fileName={`analytics-${selectedProvider || dataType}-${new Date().toISOString().split('T')[0]}`}
          isServerData={processingMode === 'server'}
          jobId={metrics?.jobId}
        />

        {/* –ò–Ω—Å–∞–π—Ç—ã */}
        {insights.length > 0 && (
          <InsightsSection insights={insights} />
        )}

        {/* –î–µ—Ç–µ–∫—Ü–∏—è –∞–Ω–æ–º–∞–ª–∏–π */}
        {anomalies.length > 0 && (
          <AnomalyDetection data={filteredData} anomalies={anomalies} />
        )}
      </div>
    </div>
  )
}

export default Dashboard 