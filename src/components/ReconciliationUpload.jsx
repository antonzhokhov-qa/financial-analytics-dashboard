import React, { useState } from 'react'
import { Upload, FileText, AlertCircle, CheckCircle2 } from 'lucide-react'
import { performReconciliationAPI, checkServerHealth } from '../utils/apiService'

const ReconciliationUpload = ({ onFilesUploaded }) => {
  const [merchantFile, setMerchantFile] = useState(null)
  const [platformFile, setPlatformFile] = useState(null)
  const [isUploading, setIsUploading] = useState(false)

  const handleFileUpload = (file, type) => {
    if (type === 'merchant') {
      setMerchantFile(file)
    } else if (type === 'platform') {
      setPlatformFile(file)
    }
  }

  const processBothFiles = async () => {
    if (!merchantFile || !platformFile) {
      alert('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ–±–∞ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–≤–µ—Ä–∫–∏')
      return
    }

    setIsUploading(true)
    console.log('üîÑ Starting reconciliation process...')

    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
      const serverAvailable = await checkServerHealth()
      if (!serverAvailable) {
        throw new Error('–°–µ—Ä–≤–µ—Ä —Å–≤–µ—Ä–∫–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–≤–µ—Ä–∫–∏
      const result = await performReconciliationAPI(merchantFile, platformFile)
      
      console.log('‚úÖ Reconciliation completed:', result)

      // –ü–µ—Ä–µ–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É
      onFilesUploaded({
        results: result,
        metadata: result.metadata,
        merchantFileName: merchantFile.name,
        platformFileName: platformFile.name
      })

    } catch (error) {
      console.error('‚ùå Error during reconciliation:', error)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–≤–µ—Ä–∫–µ —Ñ–∞–π–ª–æ–≤: ' + error.message)
    } finally {
      setIsUploading(false)
    }
  }

  return (
    <div className="max-w-4xl mx-auto p-6 bg-white rounded-lg shadow-lg">
      <div className="text-center mb-8">
        <h2 className="text-3xl font-bold text-gray-900 mb-2">
          üîÑ –°–≤–µ—Ä–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
        </h2>
        <p className="text-gray-600">
          –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Å–≤–µ—Ä–∫–∏
        </p>
      </div>

      <div className="grid md:grid-cols-2 gap-6 mb-8">
        {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ */}
        <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-blue-400 transition-colors">
          <div className="text-center">
            <FileText className="h-12 w-12 text-gray-400 mx-auto mb-4" />
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              üìä –§–∞–π–ª –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
            </h3>
            <p className="text-sm text-gray-600 mb-4">
              CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ (Tracking ID, Status, Amount...)
            </p>
            
            <input
              type="file"
              accept=".csv,.xlsx,.xls"
              onChange={(e) => handleFileUpload(e.target.files[0], 'merchant')}
              className="hidden"
              id="merchant-upload"
            />
            
            <label
              htmlFor="merchant-upload"
              className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer transition-colors"
            >
              <Upload className="h-4 w-4 mr-2" />
              –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
            </label>
            
            {merchantFile && (
              <div className="mt-3 flex items-center justify-center text-green-600">
                <CheckCircle2 className="h-4 w-4 mr-1" />
                <span className="text-sm">{merchantFile.name}</span>
              </div>
            )}
          </div>
        </div>

        {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã */}
        <div className="border-2 border-dashed border-gray-300 rounded-lg p-6 hover:border-green-400 transition-colors">
          <div className="text-center">
            <FileText className="h-12 w-12 text-gray-400 mx-auto mb-4" />
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              üè¶ –§–∞–π–ª –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
            </h3>
            <p className="text-sm text-gray-600 mb-4">
              CSV —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã (Foreign Operation ID, Status...)
            </p>
            
            <input
              type="file"
              accept=".csv,.xlsx,.xls"
              onChange={(e) => handleFileUpload(e.target.files[0], 'platform')}
              className="hidden"
              id="platform-upload"
            />
            
            <label
              htmlFor="platform-upload"
              className="inline-flex items-center px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 cursor-pointer transition-colors"
            >
              <Upload className="h-4 w-4 mr-2" />
              –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
            </label>
            
            {platformFile && (
              <div className="mt-3 flex items-center justify-center text-green-600">
                <CheckCircle2 className="h-4 w-4 mr-1" />
                <span className="text-sm">{platformFile.name}</span>
              </div>
            )}
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª–µ–π */}
      <div className="bg-gray-50 rounded-lg p-4 mb-6">
        <h4 className="font-semibold text-gray-900 mb-3">üîó –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π:</h4>
        <div className="grid md:grid-cols-2 gap-4 text-sm">
          <div>
            <p><strong>ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:</strong></p>
            <p className="text-gray-600">Foreign Operation Id (–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞) ‚Üî Tracking Id (–ø—Ä–æ–≤–∞–π–¥–µ—Ä)</p>
          </div>
          <div>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong></p>
            <p className="text-gray-600">success (–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞) ‚Üî completed (–ø—Ä–æ–≤–∞–π–¥–µ—Ä)</p>
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–≤–µ—Ä–∫–∏ */}
      <div className="text-center">
        <button
          onClick={processBothFiles}
          disabled={!merchantFile || !platformFile || isUploading}
          className="inline-flex items-center px-8 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:bg-gray-400 disabled:cursor-not-allowed transition-colors"
        >
          {isUploading ? (
            <>
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
              –û–±—Ä–∞–±–æ—Ç–∫–∞...
            </>
          ) : (
            <>
              <AlertCircle className="h-4 w-4 mr-2" />
              –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–≤–µ—Ä–∫—É
            </>
          )}
        </button>
      </div>
    </div>
  )
}

export default ReconciliationUpload 